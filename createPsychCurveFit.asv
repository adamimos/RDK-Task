function [fitresult, gof, weights,curve] = createPsychCurveFit(coherence, direction, correct)
%CREATEFIT(X,Y,W)
%  Create a fit.
%
%  Data for 'psych_curve_fit' fit:
%      X Input : x
%      Y Output: y
%      Weights : w
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 06-Oct-2017 08:36:49


%%
  direction(direction == 270) = 1;
    direction(direction == 90) = -1;

    coherence = coherence.*direction;
    
    bins = unique(coherence);

    curve = [];
    weight = [];
    for i= 1:length(bins)
        
        choices = correct(coherence == bins(i));
        weight(i) = length(choices); %/ length(correct);
        
        curve(i) = sum(choices == 1)/ length(choices);
    end



%% Fit: 'psych_curve_fit'.
x = coherence;
y = double(correct==1);
w = ones(1,length(coherence));
[xData, yData, weights] = prepareCurveData( x, y, w );

% Set up fittype and options.
ft = fittype( 'y0 + a/(1+ exp(-(x-x0 )/b) )', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [-1 -5 -1 0];
opts.StartPoint = [0.7889 -0.25 0 0.2605];
opts.Upper = [1 5 1 1];
opts.Weights = weights;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );


weights = weight;
% Plot fit with data.
% figure( 'Name', 'psych_curve_fit' );
% h = plot( fitresult, xData, yData );
% legend( h, 'y vs. x with w', 'psych_curve_fit', 'Location', 'NorthEast' );
% % Label axes
% xlabel x
% ylabel y
% grid on


